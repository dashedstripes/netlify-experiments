<div>
	<div id="output" class="min-h-screen pt-20 max-w-[65ch] mx-auto"></div>

	<div class="fixed bottom-0 left-0 w-full bg-slate-300 py-8">
		<form id="form" class="max-w-[65ch] mx-auto flex gap-4">
			<input type="text" name="message" class="border p-4 rounded block w-full">
			<button type="submit" id="submit" class="px-4 py-2 bg-slate-100 rounded">Send</button>
		</form>
	</div>
</div>


<script>
	const form: any = document.getElementById('form');

	form?.addEventListener('submit', (e: any) => {
		e.preventDefault();

		const output = document.getElementById('output');
		const div = document.createElement('div');
		div.className = 'p-8 bg-slate-800 rounded-xl text-white mb-8'
		const h3 = document.createElement('h3');
		h3.innerText = 'You';
		h3.className = 'font-bold'

		const p = document.createElement('p');

		div.appendChild(h3);
		div.appendChild(p);
		output!.appendChild(div);

		const formData = new FormData(form);
		const message: string = formData.get('message') as string;

		p.innerText += message

		form.reset();
		fetchCompletion(message);
	})

	async function fetchCompletion(message: string) {
		try {
			const res = await fetch(`/.netlify/functions/ai-stream`, {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json',
				},
				body: JSON.stringify({ message: message })
			})

			const reader = res.body?.pipeThrough(new TextDecoderStream()).getReader()

			const output = document.getElementById('output');
			const div = document.createElement('div');
			div.className = 'p-8 bg-slate-100 rounded-xl mb-8'
			const h3 = document.createElement('h3');
			h3.innerText = 'AI';
			h3.className = 'font-bold'

			const p = document.createElement('p');

			div.appendChild(h3);
			div.appendChild(p);
			output!.appendChild(div);

			while(true) {
				const { value, done } = await reader?.read();

				if(!value) {
					break;
				}

				const lines = value.trim().replaceAll('data: ', '').split('\n').filter((line: string) => line !== '')

				for(const line of lines) {
					if(line === '[DONE]') {
						break;
					}

					const data = JSON.parse(line);
					
					if(data?.choices?.[0]?.delta?.content) {{
						p.innerText += data?.choices?.[0]?.delta?.content
					}}
				}
			}

		} catch (err) {
			console.error(err);
		}
	}

</script>

<style>
	* {
		/* outline: 1px solid red; */
	}
</style>